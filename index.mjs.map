{"version":3,"file":"index.mjs","sources":["../lib/data.js","../lib/browser.js","../lib/validate.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport army from './../data/army.json';\nimport cities from './../data/cities.json';\nimport labels from './../data/labels.json';\nimport rivers from './../data/rivers.geo.json';\nimport temperature from './../data/temperature.json';\n\n\n// MAIN //\n\nvar data = {};\ndata.army = army;\ndata.cities = cities;\ndata.labels = labels;\ndata.rivers = rivers;\ndata.temperature = temperature;\n\n\n// EXPORTS //\n\nexport default data;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils-keys';\nimport copy from '@stdlib/utils-copy';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport validate from './validate.js';\nimport minardData from './data.js';\n\n\n// MAIN //\n\n/**\n* Returns datasets for Charles Joseph Minard's cartographic depiction of Napoleon's Russian campaign of 1812.\n*\n* @param {Options} [options] - options object\n* @param {string} [options.data] - dataset name\n* @throws {TypeError} must provide an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} must provide a recognized dataset name\n* @returns {(Object|ObjectArray)} dataset(s)\n*\n* @example\n* var data = minard();\n* // returns <Object>\n*\n* @example\n* var data = minard({\n*     'data': 'army'\n* });\n* // returns <ObjectArray>\n*/\nfunction minard( options ) {\n\tvar opts;\n\tvar err;\n\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.data ) {\n\t\t\tif ( !hasOwnProp( minardData, opts.data ) ) {\n\t\t\t\tthrow new RangeError( format( '0Mp4S', 'data', objectKeys( minardData ).join( '\", \"' ), opts.data ) );\n\t\t\t}\n\t\t\treturn copy( minardData[ opts.data ] );\n\t\t}\n\t}\n\treturn copy( minardData );\n}\n\n\n// EXPORTS //\n\nexport default minard;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.data] - dataset name\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'data': 'army'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0Mp2V', options ) );\n\t}\n\tif ( hasOwnProp( options, 'data' ) ) {\n\t\topts.data = options.data;\n\t\tif ( !isString( opts.data ) ) {\n\t\t\treturn new TypeError( format( '0Mp2W', 'data', opts.data ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n"],"names":["data","minard","options","opts","err","arguments","length","isObject","hasOwnProp","isString","TypeError","format","validate","minardData","RangeError","objectKeys","join","copy","army","cities","labels","rivers","temperature"],"mappings":";;i+rDA+BIA,EAAO,CAAA,ECqBX,SAASC,EAAQC,GAChB,IAAIC,EACAC,EAEJ,GAAKC,UAAUC,OAAS,EAAI,CAG3B,GADAF,ECTF,SAAmBD,EAAMD,GACxB,OAAMK,EAAUL,GAGXM,EAAYN,EAAS,UACzBC,EAAKH,KAAOE,EAAQF,MACdS,EAAUN,EAAKH,OACb,IAAIU,UAAWC,EAAQ,QAAS,OAAQR,EAAKH,OAG/C,KARC,IAAIU,UAAWC,EAAQ,QAAST,GASzC,CDFQU,CADNT,EAAO,CAAA,EACeD,GACjBE,EACJ,MAAMA,EAEP,GAAKD,EAAKH,KAAO,CAChB,IAAMQ,EAAYK,EAAYV,EAAKH,MAClC,MAAM,IAAIc,WAAYH,EAAQ,QAAS,OAAQI,EAAYF,GAAaG,KAAM,QAAUb,EAAKH,OAE9F,OAAOiB,EAAMJ,EAAYV,EAAKH,MAC9B,CACD,CACD,OAAOiB,EAAMJ,EACd,CDtCAb,EAAKkB,qiFACLlB,EAAKmB,ksBACLnB,EAAKoB,i4BACLpB,EAAKqB,OAASA,EACdrB,EAAKsB"}